#ifndef SCHEMA_READER_H
#define SCHEMA_READER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

typedef struct phraser_StoreBlock phraser_StoreBlock_t;
typedef const phraser_StoreBlock_t *phraser_StoreBlock_struct_t;
typedef phraser_StoreBlock_t *phraser_StoreBlock_mutable_struct_t;
typedef const phraser_StoreBlock_t *phraser_StoreBlock_vec_t;
typedef phraser_StoreBlock_t *phraser_StoreBlock_mutable_vec_t;

typedef const struct phraser_Folder_table *phraser_Folder_table_t;
typedef struct phraser_Folder_table *phraser_Folder_mutable_table_t;
typedef const flatbuffers_uoffset_t *phraser_Folder_vec_t;
typedef flatbuffers_uoffset_t *phraser_Folder_mutable_vec_t;
typedef const struct phraser_FoldersBlock_table *phraser_FoldersBlock_table_t;
typedef struct phraser_FoldersBlock_table *phraser_FoldersBlock_mutable_table_t;
typedef const flatbuffers_uoffset_t *phraser_FoldersBlock_vec_t;
typedef flatbuffers_uoffset_t *phraser_FoldersBlock_mutable_vec_t;
typedef const struct phraser_SymbolSet_table *phraser_SymbolSet_table_t;
typedef struct phraser_SymbolSet_table *phraser_SymbolSet_mutable_table_t;
typedef const flatbuffers_uoffset_t *phraser_SymbolSet_vec_t;
typedef flatbuffers_uoffset_t *phraser_SymbolSet_mutable_vec_t;
typedef const struct phraser_SymbolSetsBlock_table *phraser_SymbolSetsBlock_table_t;
typedef struct phraser_SymbolSetsBlock_table *phraser_SymbolSetsBlock_mutable_table_t;
typedef const flatbuffers_uoffset_t *phraser_SymbolSetsBlock_vec_t;
typedef flatbuffers_uoffset_t *phraser_SymbolSetsBlock_mutable_vec_t;
typedef const struct phraser_WordTemplate_table *phraser_WordTemplate_table_t;
typedef struct phraser_WordTemplate_table *phraser_WordTemplate_mutable_table_t;
typedef const flatbuffers_uoffset_t *phraser_WordTemplate_vec_t;
typedef flatbuffers_uoffset_t *phraser_WordTemplate_mutable_vec_t;
typedef const struct phraser_WordTemplateRef_table *phraser_WordTemplateRef_table_t;
typedef struct phraser_WordTemplateRef_table *phraser_WordTemplateRef_mutable_table_t;
typedef const flatbuffers_uoffset_t *phraser_WordTemplateRef_vec_t;
typedef flatbuffers_uoffset_t *phraser_WordTemplateRef_mutable_vec_t;
typedef const struct phraser_PhraseTemplate_table *phraser_PhraseTemplate_table_t;
typedef struct phraser_PhraseTemplate_table *phraser_PhraseTemplate_mutable_table_t;
typedef const flatbuffers_uoffset_t *phraser_PhraseTemplate_vec_t;
typedef flatbuffers_uoffset_t *phraser_PhraseTemplate_mutable_vec_t;
typedef const struct phraser_PhraseTemplatesBlock_table *phraser_PhraseTemplatesBlock_table_t;
typedef struct phraser_PhraseTemplatesBlock_table *phraser_PhraseTemplatesBlock_mutable_table_t;
typedef const flatbuffers_uoffset_t *phraser_PhraseTemplatesBlock_vec_t;
typedef flatbuffers_uoffset_t *phraser_PhraseTemplatesBlock_mutable_vec_t;
typedef const struct phraser_Word_table *phraser_Word_table_t;
typedef struct phraser_Word_table *phraser_Word_mutable_table_t;
typedef const flatbuffers_uoffset_t *phraser_Word_vec_t;
typedef flatbuffers_uoffset_t *phraser_Word_mutable_vec_t;
typedef const struct phraser_PhraseHistory_table *phraser_PhraseHistory_table_t;
typedef struct phraser_PhraseHistory_table *phraser_PhraseHistory_mutable_table_t;
typedef const flatbuffers_uoffset_t *phraser_PhraseHistory_vec_t;
typedef flatbuffers_uoffset_t *phraser_PhraseHistory_mutable_vec_t;
typedef const struct phraser_PhraseBlock_table *phraser_PhraseBlock_table_t;
typedef struct phraser_PhraseBlock_table *phraser_PhraseBlock_mutable_table_t;
typedef const flatbuffers_uoffset_t *phraser_PhraseBlock_vec_t;
typedef flatbuffers_uoffset_t *phraser_PhraseBlock_mutable_vec_t;
typedef const struct phraser_KeyBlock_table *phraser_KeyBlock_table_t;
typedef struct phraser_KeyBlock_table *phraser_KeyBlock_mutable_table_t;
typedef const flatbuffers_uoffset_t *phraser_KeyBlock_vec_t;
typedef flatbuffers_uoffset_t *phraser_KeyBlock_mutable_vec_t;
#ifndef phraser_StoreBlock_file_identifier
#define phraser_StoreBlock_file_identifier 0
#endif
/* deprecated, use phraser_StoreBlock_file_identifier */
#ifndef phraser_StoreBlock_identifier
#define phraser_StoreBlock_identifier 0
#endif
#define phraser_StoreBlock_type_hash ((flatbuffers_thash_t)0x71af5b16)
#define phraser_StoreBlock_type_identifier "\x16\x5b\xaf\x71"
#ifndef phraser_StoreBlock_file_extension
#define phraser_StoreBlock_file_extension "bin"
#endif
#ifndef phraser_Folder_file_identifier
#define phraser_Folder_file_identifier 0
#endif
/* deprecated, use phraser_Folder_file_identifier */
#ifndef phraser_Folder_identifier
#define phraser_Folder_identifier 0
#endif
#define phraser_Folder_type_hash ((flatbuffers_thash_t)0x11267404)
#define phraser_Folder_type_identifier "\x04\x74\x26\x11"
#ifndef phraser_Folder_file_extension
#define phraser_Folder_file_extension "bin"
#endif
#ifndef phraser_FoldersBlock_file_identifier
#define phraser_FoldersBlock_file_identifier 0
#endif
/* deprecated, use phraser_FoldersBlock_file_identifier */
#ifndef phraser_FoldersBlock_identifier
#define phraser_FoldersBlock_identifier 0
#endif
#define phraser_FoldersBlock_type_hash ((flatbuffers_thash_t)0xec279f72)
#define phraser_FoldersBlock_type_identifier "\x72\x9f\x27\xec"
#ifndef phraser_FoldersBlock_file_extension
#define phraser_FoldersBlock_file_extension "bin"
#endif
#ifndef phraser_SymbolSet_file_identifier
#define phraser_SymbolSet_file_identifier 0
#endif
/* deprecated, use phraser_SymbolSet_file_identifier */
#ifndef phraser_SymbolSet_identifier
#define phraser_SymbolSet_identifier 0
#endif
#define phraser_SymbolSet_type_hash ((flatbuffers_thash_t)0x13e4553c)
#define phraser_SymbolSet_type_identifier "\x3c\x55\xe4\x13"
#ifndef phraser_SymbolSet_file_extension
#define phraser_SymbolSet_file_extension "bin"
#endif
#ifndef phraser_SymbolSetsBlock_file_identifier
#define phraser_SymbolSetsBlock_file_identifier 0
#endif
/* deprecated, use phraser_SymbolSetsBlock_file_identifier */
#ifndef phraser_SymbolSetsBlock_identifier
#define phraser_SymbolSetsBlock_identifier 0
#endif
#define phraser_SymbolSetsBlock_type_hash ((flatbuffers_thash_t)0x16113e9a)
#define phraser_SymbolSetsBlock_type_identifier "\x9a\x3e\x11\x16"
#ifndef phraser_SymbolSetsBlock_file_extension
#define phraser_SymbolSetsBlock_file_extension "bin"
#endif
#ifndef phraser_WordTemplate_file_identifier
#define phraser_WordTemplate_file_identifier 0
#endif
/* deprecated, use phraser_WordTemplate_file_identifier */
#ifndef phraser_WordTemplate_identifier
#define phraser_WordTemplate_identifier 0
#endif
#define phraser_WordTemplate_type_hash ((flatbuffers_thash_t)0x974288ba)
#define phraser_WordTemplate_type_identifier "\xba\x88\x42\x97"
#ifndef phraser_WordTemplate_file_extension
#define phraser_WordTemplate_file_extension "bin"
#endif
#ifndef phraser_WordTemplateRef_file_identifier
#define phraser_WordTemplateRef_file_identifier 0
#endif
/* deprecated, use phraser_WordTemplateRef_file_identifier */
#ifndef phraser_WordTemplateRef_identifier
#define phraser_WordTemplateRef_identifier 0
#endif
#define phraser_WordTemplateRef_type_hash ((flatbuffers_thash_t)0x1f036493)
#define phraser_WordTemplateRef_type_identifier "\x93\x64\x03\x1f"
#ifndef phraser_WordTemplateRef_file_extension
#define phraser_WordTemplateRef_file_extension "bin"
#endif
#ifndef phraser_PhraseTemplate_file_identifier
#define phraser_PhraseTemplate_file_identifier 0
#endif
/* deprecated, use phraser_PhraseTemplate_file_identifier */
#ifndef phraser_PhraseTemplate_identifier
#define phraser_PhraseTemplate_identifier 0
#endif
#define phraser_PhraseTemplate_type_hash ((flatbuffers_thash_t)0x14764663)
#define phraser_PhraseTemplate_type_identifier "\x63\x46\x76\x14"
#ifndef phraser_PhraseTemplate_file_extension
#define phraser_PhraseTemplate_file_extension "bin"
#endif
#ifndef phraser_PhraseTemplatesBlock_file_identifier
#define phraser_PhraseTemplatesBlock_file_identifier 0
#endif
/* deprecated, use phraser_PhraseTemplatesBlock_file_identifier */
#ifndef phraser_PhraseTemplatesBlock_identifier
#define phraser_PhraseTemplatesBlock_identifier 0
#endif
#define phraser_PhraseTemplatesBlock_type_hash ((flatbuffers_thash_t)0x60d96be1)
#define phraser_PhraseTemplatesBlock_type_identifier "\xe1\x6b\xd9\x60"
#ifndef phraser_PhraseTemplatesBlock_file_extension
#define phraser_PhraseTemplatesBlock_file_extension "bin"
#endif
#ifndef phraser_Word_file_identifier
#define phraser_Word_file_identifier 0
#endif
/* deprecated, use phraser_Word_file_identifier */
#ifndef phraser_Word_identifier
#define phraser_Word_identifier 0
#endif
#define phraser_Word_type_hash ((flatbuffers_thash_t)0xbb708d30)
#define phraser_Word_type_identifier "\x30\x8d\x70\xbb"
#ifndef phraser_Word_file_extension
#define phraser_Word_file_extension "bin"
#endif
#ifndef phraser_PhraseHistory_file_identifier
#define phraser_PhraseHistory_file_identifier 0
#endif
/* deprecated, use phraser_PhraseHistory_file_identifier */
#ifndef phraser_PhraseHistory_identifier
#define phraser_PhraseHistory_identifier 0
#endif
#define phraser_PhraseHistory_type_hash ((flatbuffers_thash_t)0x399e0c07)
#define phraser_PhraseHistory_type_identifier "\x07\x0c\x9e\x39"
#ifndef phraser_PhraseHistory_file_extension
#define phraser_PhraseHistory_file_extension "bin"
#endif
#ifndef phraser_PhraseBlock_file_identifier
#define phraser_PhraseBlock_file_identifier 0
#endif
/* deprecated, use phraser_PhraseBlock_file_identifier */
#ifndef phraser_PhraseBlock_identifier
#define phraser_PhraseBlock_identifier 0
#endif
#define phraser_PhraseBlock_type_hash ((flatbuffers_thash_t)0x55c7735a)
#define phraser_PhraseBlock_type_identifier "\x5a\x73\xc7\x55"
#ifndef phraser_PhraseBlock_file_extension
#define phraser_PhraseBlock_file_extension "bin"
#endif
#ifndef phraser_KeyBlock_file_identifier
#define phraser_KeyBlock_file_identifier 0
#endif
/* deprecated, use phraser_KeyBlock_file_identifier */
#ifndef phraser_KeyBlock_identifier
#define phraser_KeyBlock_identifier 0
#endif
#define phraser_KeyBlock_type_hash ((flatbuffers_thash_t)0x9c540370)
#define phraser_KeyBlock_type_identifier "\x70\x03\x54\x9c"
#ifndef phraser_KeyBlock_file_extension
#define phraser_KeyBlock_file_extension "bin"
#endif

typedef int8_t phraser_BlockType_enum_t;
__flatbuffers_define_integer_type(phraser_BlockType, phraser_BlockType_enum_t, 8)
#define phraser_BlockType_Unknown ((phraser_BlockType_enum_t)INT8_C(0))
#define phraser_BlockType_FoldersBlock ((phraser_BlockType_enum_t)INT8_C(1))
#define phraser_BlockType_SymbolSetsBlock ((phraser_BlockType_enum_t)INT8_C(2))
#define phraser_BlockType_PhraseTemplatesBlock ((phraser_BlockType_enum_t)INT8_C(3))
#define phraser_BlockType_PhraseBlock ((phraser_BlockType_enum_t)INT8_C(4))
#define phraser_BlockType_KeyBlock ((phraser_BlockType_enum_t)INT8_C(5))

static inline const char *phraser_BlockType_name(phraser_BlockType_enum_t value)
{
    switch (value) {
    case phraser_BlockType_Unknown: return "Unknown";
    case phraser_BlockType_FoldersBlock: return "FoldersBlock";
    case phraser_BlockType_SymbolSetsBlock: return "SymbolSetsBlock";
    case phraser_BlockType_PhraseTemplatesBlock: return "PhraseTemplatesBlock";
    case phraser_BlockType_PhraseBlock: return "PhraseBlock";
    case phraser_BlockType_KeyBlock: return "KeyBlock";
    default: return "";
    }
}

static inline int phraser_BlockType_is_known_value(phraser_BlockType_enum_t value)
{
    switch (value) {
    case phraser_BlockType_Unknown: return 1;
    case phraser_BlockType_FoldersBlock: return 1;
    case phraser_BlockType_SymbolSetsBlock: return 1;
    case phraser_BlockType_PhraseTemplatesBlock: return 1;
    case phraser_BlockType_PhraseBlock: return 1;
    case phraser_BlockType_KeyBlock: return 1;
    default: return 0;
    }
}

typedef int8_t phraser_Icon_enum_t;
__flatbuffers_define_integer_type(phraser_Icon, phraser_Icon_enum_t, 8)
#define phraser_Icon_Unknown ((phraser_Icon_enum_t)INT8_C(0))
#define phraser_Icon_Key ((phraser_Icon_enum_t)INT8_C(1))
#define phraser_Icon_Login ((phraser_Icon_enum_t)INT8_C(2))
#define phraser_Icon_Asterisk ((phraser_Icon_enum_t)INT8_C(3))
#define phraser_Icon_Lock ((phraser_Icon_enum_t)INT8_C(4))
#define phraser_Icon_Aa ((phraser_Icon_enum_t)INT8_C(5))
#define phraser_Icon_Star ((phraser_Icon_enum_t)INT8_C(6))
#define phraser_Icon_Settings ((phraser_Icon_enum_t)INT8_C(7))
#define phraser_Icon_Folder ((phraser_Icon_enum_t)INT8_C(8))
#define phraser_Icon_ToParentFolder ((phraser_Icon_enum_t)INT8_C(9))
#define phraser_Icon_LookingGlass ((phraser_Icon_enum_t)INT8_C(10))
#define phraser_Icon_LTTriangle ((phraser_Icon_enum_t)INT8_C(11))
#define phraser_Icon_GTTriangle ((phraser_Icon_enum_t)INT8_C(12))
#define phraser_Icon_TextOut ((phraser_Icon_enum_t)INT8_C(13))
#define phraser_Icon_Ledger ((phraser_Icon_enum_t)INT8_C(14))
#define phraser_Icon_PlusMinus ((phraser_Icon_enum_t)INT8_C(15))
#define phraser_Icon_Stars ((phraser_Icon_enum_t)INT8_C(16))
#define phraser_Icon_Message ((phraser_Icon_enum_t)INT8_C(17))
#define phraser_Icon_Quote ((phraser_Icon_enum_t)INT8_C(18))
#define phraser_Icon_Question ((phraser_Icon_enum_t)INT8_C(19))
#define phraser_Icon_Plus ((phraser_Icon_enum_t)INT8_C(20))
#define phraser_Icon_Minus ((phraser_Icon_enum_t)INT8_C(21))
#define phraser_Icon_X ((phraser_Icon_enum_t)INT8_C(22))
#define phraser_Icon_Check ((phraser_Icon_enum_t)INT8_C(23))
#define phraser_Icon_Copy ((phraser_Icon_enum_t)INT8_C(24))
#define phraser_Icon_Download ((phraser_Icon_enum_t)INT8_C(25))
#define phraser_Icon_Upload ((phraser_Icon_enum_t)INT8_C(26))
#define phraser_Icon_Skull ((phraser_Icon_enum_t)INT8_C(27))
#define phraser_Icon_Email ((phraser_Icon_enum_t)INT8_C(28))

static inline const char *phraser_Icon_name(phraser_Icon_enum_t value)
{
    switch (value) {
    case phraser_Icon_Unknown: return "Unknown";
    case phraser_Icon_Key: return "Key";
    case phraser_Icon_Login: return "Login";
    case phraser_Icon_Asterisk: return "Asterisk";
    case phraser_Icon_Lock: return "Lock";
    case phraser_Icon_Aa: return "Aa";
    case phraser_Icon_Star: return "Star";
    case phraser_Icon_Settings: return "Settings";
    case phraser_Icon_Folder: return "Folder";
    case phraser_Icon_ToParentFolder: return "ToParentFolder";
    case phraser_Icon_LookingGlass: return "LookingGlass";
    case phraser_Icon_LTTriangle: return "LTTriangle";
    case phraser_Icon_GTTriangle: return "GTTriangle";
    case phraser_Icon_TextOut: return "TextOut";
    case phraser_Icon_Ledger: return "Ledger";
    case phraser_Icon_PlusMinus: return "PlusMinus";
    case phraser_Icon_Stars: return "Stars";
    case phraser_Icon_Message: return "Message";
    case phraser_Icon_Quote: return "Quote";
    case phraser_Icon_Question: return "Question";
    case phraser_Icon_Plus: return "Plus";
    case phraser_Icon_Minus: return "Minus";
    case phraser_Icon_X: return "X";
    case phraser_Icon_Check: return "Check";
    case phraser_Icon_Copy: return "Copy";
    case phraser_Icon_Download: return "Download";
    case phraser_Icon_Upload: return "Upload";
    case phraser_Icon_Skull: return "Skull";
    case phraser_Icon_Email: return "Email";
    default: return "";
    }
}

static inline int phraser_Icon_is_known_value(phraser_Icon_enum_t value)
{
    switch (value) {
    case phraser_Icon_Unknown: return 1;
    case phraser_Icon_Key: return 1;
    case phraser_Icon_Login: return 1;
    case phraser_Icon_Asterisk: return 1;
    case phraser_Icon_Lock: return 1;
    case phraser_Icon_Aa: return 1;
    case phraser_Icon_Star: return 1;
    case phraser_Icon_Settings: return 1;
    case phraser_Icon_Folder: return 1;
    case phraser_Icon_ToParentFolder: return 1;
    case phraser_Icon_LookingGlass: return 1;
    case phraser_Icon_LTTriangle: return 1;
    case phraser_Icon_GTTriangle: return 1;
    case phraser_Icon_TextOut: return 1;
    case phraser_Icon_Ledger: return 1;
    case phraser_Icon_PlusMinus: return 1;
    case phraser_Icon_Stars: return 1;
    case phraser_Icon_Message: return 1;
    case phraser_Icon_Quote: return 1;
    case phraser_Icon_Question: return 1;
    case phraser_Icon_Plus: return 1;
    case phraser_Icon_Minus: return 1;
    case phraser_Icon_X: return 1;
    case phraser_Icon_Check: return 1;
    case phraser_Icon_Copy: return 1;
    case phraser_Icon_Download: return 1;
    case phraser_Icon_Upload: return 1;
    case phraser_Icon_Skull: return 1;
    case phraser_Icon_Email: return 1;
    default: return 0;
    }
}


struct phraser_StoreBlock {
    alignas(8) uint16_t block_id;
    alignas(4) uint32_t version;
    alignas(8) uint64_t entropy;
};
static_assert(sizeof(phraser_StoreBlock_t) == 16, "struct size mismatch");

static inline const phraser_StoreBlock_t *phraser_StoreBlock__const_ptr_add(const phraser_StoreBlock_t *p, size_t i) { return p + i; }
static inline phraser_StoreBlock_t *phraser_StoreBlock__ptr_add(phraser_StoreBlock_t *p, size_t i) { return p + i; }
static inline phraser_StoreBlock_struct_t phraser_StoreBlock_vec_at(phraser_StoreBlock_vec_t vec, size_t i)
__flatbuffers_struct_vec_at(vec, i)
static inline size_t phraser_StoreBlock__size(void) { return 16; }
static inline size_t phraser_StoreBlock_vec_len(phraser_StoreBlock_vec_t vec)
__flatbuffers_vec_len(vec)
__flatbuffers_struct_as_root(phraser_StoreBlock)

__flatbuffers_define_struct_scalar_field(phraser_StoreBlock, block_id, flatbuffers_uint16, uint16_t)
__flatbuffers_define_struct_scalar_field(phraser_StoreBlock, version, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(phraser_StoreBlock, entropy, flatbuffers_uint64, uint64_t)


struct phraser_Folder_table { uint8_t unused__; };

static inline size_t phraser_Folder_vec_len(phraser_Folder_vec_t vec)
__flatbuffers_vec_len(vec)
static inline phraser_Folder_table_t phraser_Folder_vec_at(phraser_Folder_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(phraser_Folder_table_t, vec, i, 0)
__flatbuffers_table_as_root(phraser_Folder)

__flatbuffers_define_scalar_field(0, phraser_Folder, folder_id, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_scalar_field(1, phraser_Folder, parent_folder_id, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_string_field(2, phraser_Folder, folder_name, 0)

struct phraser_FoldersBlock_table { uint8_t unused__; };

static inline size_t phraser_FoldersBlock_vec_len(phraser_FoldersBlock_vec_t vec)
__flatbuffers_vec_len(vec)
static inline phraser_FoldersBlock_table_t phraser_FoldersBlock_vec_at(phraser_FoldersBlock_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(phraser_FoldersBlock_table_t, vec, i, 0)
__flatbuffers_table_as_root(phraser_FoldersBlock)

__flatbuffers_define_struct_field(0, phraser_FoldersBlock, block, phraser_StoreBlock_struct_t, 0)
__flatbuffers_define_vector_field(1, phraser_FoldersBlock, folders, phraser_Folder_vec_t, 0)

struct phraser_SymbolSet_table { uint8_t unused__; };

static inline size_t phraser_SymbolSet_vec_len(phraser_SymbolSet_vec_t vec)
__flatbuffers_vec_len(vec)
static inline phraser_SymbolSet_table_t phraser_SymbolSet_vec_at(phraser_SymbolSet_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(phraser_SymbolSet_table_t, vec, i, 0)
__flatbuffers_table_as_root(phraser_SymbolSet)

__flatbuffers_define_scalar_field(0, phraser_SymbolSet, set_id, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_string_field(1, phraser_SymbolSet, symbol_set_name, 0)
__flatbuffers_define_string_field(2, phraser_SymbolSet, symbol_set, 0)

struct phraser_SymbolSetsBlock_table { uint8_t unused__; };

static inline size_t phraser_SymbolSetsBlock_vec_len(phraser_SymbolSetsBlock_vec_t vec)
__flatbuffers_vec_len(vec)
static inline phraser_SymbolSetsBlock_table_t phraser_SymbolSetsBlock_vec_at(phraser_SymbolSetsBlock_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(phraser_SymbolSetsBlock_table_t, vec, i, 0)
__flatbuffers_table_as_root(phraser_SymbolSetsBlock)

__flatbuffers_define_struct_field(0, phraser_SymbolSetsBlock, block, phraser_StoreBlock_struct_t, 0)
__flatbuffers_define_vector_field(1, phraser_SymbolSetsBlock, symbol_sets, phraser_SymbolSet_vec_t, 0)

struct phraser_WordTemplate_table { uint8_t unused__; };

static inline size_t phraser_WordTemplate_vec_len(phraser_WordTemplate_vec_t vec)
__flatbuffers_vec_len(vec)
static inline phraser_WordTemplate_table_t phraser_WordTemplate_vec_at(phraser_WordTemplate_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(phraser_WordTemplate_table_t, vec, i, 0)
__flatbuffers_table_as_root(phraser_WordTemplate)

__flatbuffers_define_scalar_field(0, phraser_WordTemplate, word_template_id, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_scalar_field(1, phraser_WordTemplate, permissions, flatbuffers_int8, int8_t, INT8_C(0))
__flatbuffers_define_scalar_field(2, phraser_WordTemplate, icon, phraser_Icon, phraser_Icon_enum_t, INT8_C(0))
__flatbuffers_define_scalar_field(3, phraser_WordTemplate, min_length, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_scalar_field(4, phraser_WordTemplate, max_length, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_string_field(5, phraser_WordTemplate, word_template_name, 0)
__flatbuffers_define_vector_field(6, phraser_WordTemplate, symbol_set_ids, flatbuffers_uint16_vec_t, 0)

struct phraser_WordTemplateRef_table { uint8_t unused__; };

static inline size_t phraser_WordTemplateRef_vec_len(phraser_WordTemplateRef_vec_t vec)
__flatbuffers_vec_len(vec)
static inline phraser_WordTemplateRef_table_t phraser_WordTemplateRef_vec_at(phraser_WordTemplateRef_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(phraser_WordTemplateRef_table_t, vec, i, 0)
__flatbuffers_table_as_root(phraser_WordTemplateRef)

__flatbuffers_define_scalar_field(0, phraser_WordTemplateRef, word_template_id, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_scalar_field(1, phraser_WordTemplateRef, word_template_ordinal, flatbuffers_int8, int8_t, INT8_C(0))

struct phraser_PhraseTemplate_table { uint8_t unused__; };

static inline size_t phraser_PhraseTemplate_vec_len(phraser_PhraseTemplate_vec_t vec)
__flatbuffers_vec_len(vec)
static inline phraser_PhraseTemplate_table_t phraser_PhraseTemplate_vec_at(phraser_PhraseTemplate_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(phraser_PhraseTemplate_table_t, vec, i, 0)
__flatbuffers_table_as_root(phraser_PhraseTemplate)

__flatbuffers_define_scalar_field(0, phraser_PhraseTemplate, phrase_template_id, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_string_field(1, phraser_PhraseTemplate, phrase_template_name, 0)
__flatbuffers_define_vector_field(2, phraser_PhraseTemplate, word_template_refs, phraser_WordTemplateRef_vec_t, 0)

struct phraser_PhraseTemplatesBlock_table { uint8_t unused__; };

static inline size_t phraser_PhraseTemplatesBlock_vec_len(phraser_PhraseTemplatesBlock_vec_t vec)
__flatbuffers_vec_len(vec)
static inline phraser_PhraseTemplatesBlock_table_t phraser_PhraseTemplatesBlock_vec_at(phraser_PhraseTemplatesBlock_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(phraser_PhraseTemplatesBlock_table_t, vec, i, 0)
__flatbuffers_table_as_root(phraser_PhraseTemplatesBlock)

__flatbuffers_define_struct_field(0, phraser_PhraseTemplatesBlock, block, phraser_StoreBlock_struct_t, 0)
__flatbuffers_define_vector_field(1, phraser_PhraseTemplatesBlock, phrase_templates, phraser_PhraseTemplate_vec_t, 0)
__flatbuffers_define_vector_field(2, phraser_PhraseTemplatesBlock, word_templates, phraser_WordTemplate_vec_t, 0)

struct phraser_Word_table { uint8_t unused__; };

static inline size_t phraser_Word_vec_len(phraser_Word_vec_t vec)
__flatbuffers_vec_len(vec)
static inline phraser_Word_table_t phraser_Word_vec_at(phraser_Word_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(phraser_Word_table_t, vec, i, 0)
__flatbuffers_table_as_root(phraser_Word)

__flatbuffers_define_scalar_field(0, phraser_Word, word_template_id, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_scalar_field(1, phraser_Word, word_template_ordinal, flatbuffers_int8, int8_t, INT8_C(0))
__flatbuffers_define_string_field(2, phraser_Word, name, 0)
__flatbuffers_define_string_field(3, phraser_Word, word, 0)
__flatbuffers_define_scalar_field(4, phraser_Word, permissions, flatbuffers_int8, int8_t, INT8_C(0))
__flatbuffers_define_scalar_field(5, phraser_Word, icon, phraser_Icon, phraser_Icon_enum_t, INT8_C(0))

struct phraser_PhraseHistory_table { uint8_t unused__; };

static inline size_t phraser_PhraseHistory_vec_len(phraser_PhraseHistory_vec_t vec)
__flatbuffers_vec_len(vec)
static inline phraser_PhraseHistory_table_t phraser_PhraseHistory_vec_at(phraser_PhraseHistory_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(phraser_PhraseHistory_table_t, vec, i, 0)
__flatbuffers_table_as_root(phraser_PhraseHistory)

__flatbuffers_define_scalar_field(0, phraser_PhraseHistory, phrase_template_id, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_vector_field(1, phraser_PhraseHistory, phrase, phraser_Word_vec_t, 0)

struct phraser_PhraseBlock_table { uint8_t unused__; };

static inline size_t phraser_PhraseBlock_vec_len(phraser_PhraseBlock_vec_t vec)
__flatbuffers_vec_len(vec)
static inline phraser_PhraseBlock_table_t phraser_PhraseBlock_vec_at(phraser_PhraseBlock_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(phraser_PhraseBlock_table_t, vec, i, 0)
__flatbuffers_table_as_root(phraser_PhraseBlock)

__flatbuffers_define_struct_field(0, phraser_PhraseBlock, block, phraser_StoreBlock_struct_t, 0)
__flatbuffers_define_scalar_field(1, phraser_PhraseBlock, phrase_template_id, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_scalar_field(2, phraser_PhraseBlock, folder_id, flatbuffers_uint16, uint16_t, UINT16_C(0))
__flatbuffers_define_scalar_field(3, phraser_PhraseBlock, is_tombstone, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
__flatbuffers_define_string_field(4, phraser_PhraseBlock, phrase_name, 0)
__flatbuffers_define_vector_field(5, phraser_PhraseBlock, history, phraser_PhraseHistory_vec_t, 0)

struct phraser_KeyBlock_table { uint8_t unused__; };

static inline size_t phraser_KeyBlock_vec_len(phraser_KeyBlock_vec_t vec)
__flatbuffers_vec_len(vec)
static inline phraser_KeyBlock_table_t phraser_KeyBlock_vec_at(phraser_KeyBlock_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(phraser_KeyBlock_table_t, vec, i, 0)
__flatbuffers_table_as_root(phraser_KeyBlock)

__flatbuffers_define_struct_field(0, phraser_KeyBlock, block, phraser_StoreBlock_struct_t, 0)
__flatbuffers_define_vector_field(1, phraser_KeyBlock, key, flatbuffers_int8_vec_t, 0)
__flatbuffers_define_vector_field(2, phraser_KeyBlock, db_name, flatbuffers_int8_vec_t, 0)
__flatbuffers_define_vector_field(3, phraser_KeyBlock, iv, flatbuffers_int8_vec_t, 0)
__flatbuffers_define_scalar_field(4, phraser_KeyBlock, block_count, flatbuffers_uint16, uint16_t, UINT16_C(0))


#include "flatcc/flatcc_epilogue.h"
#endif /* SCHEMA_READER_H */
